proc dolar {C = 0
E = E+1
stack[E] = 10
call procedimiento_16
t10 = stack[E]
E = E-1
call procedimiento_86
call procedimiento_77
P = 400
P = P
t10 = P
call procedimiento_66
P = P
}; undefined
proc procedimiento_55 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L2
t10 = stack[t10]
goto L3
L2:t10 = heap[t10]
L3:E = E+1
stack[E] = t10
t10 = 1
E = E+1
stack[E] = t10
call procedimiento_32
E = E+1
stack[E] = 14
call procedimiento_56
t44 = stack[E]
heap[t44] = 13
t22 = t44+1
heap[t22] = 116
t22 = t44+2
heap[t22] = 101
t22 = t44+3
heap[t22] = 120
t22 = t44+4
heap[t22] = 116
t22 = t44+5
heap[t22] = 111
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 115
t22 = t44+8
heap[t22] = 101
t22 = t44+9
heap[t22] = 116
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 97
t22 = t44+12
heap[t22] = 100
t22 = t44+13
heap[t22] = 111
call procedimiento_66
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L5
stack[t10] = t44
goto L4
L5:heap[t10] = t44
L4:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
L1:}; undefined
proc procedimiento_57 {E = E+1
stack[E] = 17
call procedimiento_9
t44 = stack[E]
heap[t44] = 16
t22 = t44+1
heap[t22] = 68
t22 = t44+2
heap[t22] = 101
t22 = t44+3
heap[t22] = 115
t22 = t44+4
heap[t22] = 100
t22 = t44+5
heap[t22] = 101
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 101
t22 = t44+8
heap[t22] = 108
t22 = t44+9
heap[t22] = 32
t22 = t44+10
heap[t22] = 112
t22 = t44+11
heap[t22] = 97
t22 = t44+12
heap[t22] = 100
t22 = t44+13
heap[t22] = 114
t22 = t44+14
heap[t22] = 101
t22 = t44+15
heap[t22] = 58
t22 = t44+16
heap[t22] = 32
call procedimiento_53
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 1
E = E+1
stack[E] = t10
call procedimiento_1
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_81
E = E+1
stack[E] = 0
call procedimiento_39
call procedimiento_43
print('%c',10)
L6:}; undefined
proc procedimiento_59 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 2
E = E+1
stack[E] = t10
call procedimiento_89
L7:}; undefined
proc procedimiento_61 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L9
t10 = stack[t10]
goto L10
L9:t10 = heap[t10]
L10:E = E+1
stack[E] = t10
t10 = 2
E = E+1
stack[E] = t10
call procedimiento_60
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L12
stack[t10] = t44
goto L11
L12:heap[t10] = t44
L11:L8:}; undefined
proc procedimiento_63 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 3
E = E+1
stack[E] = t10
call procedimiento_95
L13:}; undefined
proc procedimiento_65 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L15
t10 = stack[t10]
goto L16
L15:t10 = heap[t10]
L16:E = E+1
stack[E] = t10
t10 = 3
E = E+1
stack[E] = t10
call procedimiento_78
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L18
stack[t10] = t44
goto L17
L18:heap[t10] = t44
L17:L14:}; undefined
proc procedimiento_67 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 4
E = E+1
stack[E] = t10
call procedimiento_24
L19:}; undefined
proc procedimiento_69 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L21
t10 = stack[t10]
goto L22
L21:t10 = heap[t10]
L22:E = E+1
stack[E] = t10
t10 = 4
E = E+1
stack[E] = t10
call procedimiento_28
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L24
stack[t10] = t44
goto L23
L24:heap[t10] = t44
L23:L20:}; undefined
proc procedimiento_71 {call procedimiento_91
E = E+1
stack[E] = 0
call procedimiento_29
P = P+1
t44 = P-1
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_48
P = P-1
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
call procedimiento_39
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
L25:}; undefined
proc procedimiento_73 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 5
E = E+1
stack[E] = t10
call procedimiento_23
L26:}; undefined
proc procedimiento_75 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L28
t10 = stack[t10]
goto L29
L28:t10 = heap[t10]
L29:E = E+1
stack[E] = t10
t10 = 5
E = E+1
stack[E] = t10
call procedimiento_11
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L31
stack[t10] = t44
goto L30
L31:heap[t10] = t44
L30:L27:}; undefined
proc procedimiento_77 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_22
L32:}; undefined
proc procedimiento_79 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L34
t10 = stack[t10]
goto L35
L34:t10 = heap[t10]
L35:E = E+1
stack[E] = t10
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_71
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L37
stack[t10] = t44
goto L36
L37:heap[t10] = t44
L36:L33:}; undefined
proc procedimiento_82 {t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_10
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_18
P = P-3
t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_59
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_36
P = P-3
}; undefined
proc procedimiento_84 {t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_23
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_80
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_22
P = P-3
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
}; undefined
proc procedimiento_81 {call procedimiento_63
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_79
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_37
P = P-3
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_48
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_78
P = P-3
t10 = stack[E]
E = E-1
if t10==0 goto L40
P = P+3
t44 = P-3
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_77
P = P-3
goto L39
L40:P = P+3
t44 = P-3
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_99
P = P-3
L39:L38:}; undefined
proc procedimiento_88 {E = E+1
stack[E] = 1
P = P-2
goto L41
}; undefined
proc procedimiento_90 {E = E+1
stack[E] = 0
P = P-2
goto L41
}; undefined
proc procedimiento_87 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_87
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_18
P = P-2
t10 = stack[E]
E = E-1
if t10==0 goto L43
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_48
P = P-2
L43:L42:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_29
E = E+1
stack[E] = 0
call procedimiento_14
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_22
P = P-2
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L46
t44 = 0
goto L47
L46:t44 = 1
L47:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L45
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_18
P = P-2
L45:L44:E = E+1
stack[E] = 1
L41:}; undefined
proc procedimiento_94 {t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_91
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_96
P = P-2
E = E+1
stack[E] = 1
call procedimiento_35
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_83
P = P-2
E = E+1
stack[E] = 15
call procedimiento_3
t44 = stack[E]
heap[t44] = 14
t22 = t44+1
heap[t22] = 70
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 99
t22 = t44+4
heap[t22] = 104
t22 = t44+5
heap[t22] = 97
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 97
t22 = t44+8
heap[t22] = 103
t22 = t44+9
heap[t22] = 114
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 103
t22 = t44+12
heap[t22] = 97
t22 = t44+13
heap[t22] = 100
t22 = t44+14
heap[t22] = 97
call procedimiento_73
P = P-2
goto L48
}; undefined
proc procedimiento_93 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_85
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_81
P = P-2
E = E+1
stack[E] = 1
call procedimiento_34
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_0
P = P-2
t10 = stack[E]
E = E-1
if t10==0 goto L50
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_44
P = P-2
L50:L49:E = E+1
stack[E] = 25
call procedimiento_83
t44 = stack[E]
heap[t44] = 24
t22 = t44+1
heap[t22] = 78
t22 = t44+2
heap[t22] = 111
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 115
t22 = t44+5
heap[t22] = 101
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 112
t22 = t44+8
heap[t22] = 117
t22 = t44+9
heap[t22] = 100
t22 = t44+10
heap[t22] = 111
t22 = t44+11
heap[t22] = 32
t22 = t44+12
heap[t22] = 97
t22 = t44+13
heap[t22] = 103
t22 = t44+14
heap[t22] = 114
t22 = t44+15
heap[t22] = 101
t22 = t44+16
heap[t22] = 103
t22 = t44+17
heap[t22] = 97
t22 = t44+18
heap[t22] = 114
t22 = t44+19
heap[t22] = 32
t22 = t44+20
heap[t22] = 102
t22 = t44+21
heap[t22] = 105
t22 = t44+22
heap[t22] = 99
t22 = t44+23
heap[t22] = 104
t22 = t44+24
heap[t22] = 97
call procedimiento_99
L48:}; undefined
proc procedimiento_98 {t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
P = P-2
goto L51
}; undefined
proc procedimiento_100 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_8
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_23
P = P-3
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_61
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_98
P = P-3
}; undefined
proc procedimiento_102 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_17
E = E+1
stack[E] = 0
call procedimiento_5
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_28
P = P-3
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_71
P = P+3
t44 = P-3
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_88
P = P-3
}; undefined
proc procedimiento_97 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_43
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_35
P = P-2
t10 = stack[E]
E = E-1
if t10==0 goto L53
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_12
P = P-2
L53:L52:t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_22
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L55
stack[t10] = t44
goto L54
L55:heap[t10] = t44
L54:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 6
E = E+1
stack[E] = t10
call procedimiento_24
E = E+1
stack[E] = 0
call procedimiento_42
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_32
P = P-2
E = E+1
stack[E] = 0
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L58
t44 = 0
goto L59
L58:t44 = 1
L59:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L57
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+2
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_83
P = P-2
goto L56
L57:P = P+2
t44 = P-2
t10 = t44+1
t22 = P+2
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_7
P = P-2
L56:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
L51:}; undefined
proc procedimiento_105 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_62
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_79
P = P-2
E = E+1
stack[E] = 0
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L61
t44 = 0
goto L62
L61:t44 = 1
L62:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
L60:}; undefined
proc procedimiento_107 {E = E+1
stack[E] = 3
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_49
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
E = E+1
stack[E] = 0
t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L64
t44 = stack[t44]
goto L65
L64:t44 = heap[t44]
L65:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_44
call procedimiento_28
E = E+1
stack[E] = 0
call procedimiento_95
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_96
P = P-6
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L67
stack[t10] = t44
goto L66
L67:heap[t10] = t44
L66:E = E+1
stack[E] = 1
t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L68
t44 = stack[t44]
goto L69
L68:t44 = heap[t44]
L69:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_42
call procedimiento_7
E = E+1
stack[E] = 0
call procedimiento_14
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_68
P = P-6
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L71
stack[t10] = t44
goto L70
L71:heap[t10] = t44
L70:E = E+1
stack[E] = 2
t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L72
t44 = stack[t44]
goto L73
L72:t44 = heap[t44]
L73:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_7
call procedimiento_8
E = E+1
stack[E] = 0
call procedimiento_93
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_88
P = P-6
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L75
stack[t10] = t44
goto L74
L75:heap[t10] = t44
L74:E = E+1
stack[E] = 0
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_96
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
E = E+1
stack[E] = 1
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_78
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 2
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_85
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 7
E = E+1
stack[E] = 1
call procedimiento_45
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_8
P = P-6
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
E = E+1
stack[E] = 1
call procedimiento_2
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_86
P = P-6
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 1
call procedimiento_85
P = P+6
t44 = P-6
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_73
P = P-6
L63:}; undefined
proc procedimiento_110 {t44 = P+7
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 8
call procedimiento_41
t44 = P+7
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 8
call procedimiento_66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_14
t44 = P+7
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+6
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 8
call procedimiento_38
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_17
E = E+1
stack[E] = 0
call procedimiento_41
call procedimiento_61
print('%c',10)
t44 = P+7
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+7
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10-1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L82
stack[target_ref] = t10
goto L83
L82:heap[target_ref] = t10
L83:L78:}; undefined
proc procedimiento_109 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_22
P = P+8
t44 = P-8
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_85
P = P-8
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_31
P = P+8
t44 = P-8
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_46
P = P-8
t10 = stack[E]
E = E-1
t44 = P+5
stack[t44] = t10
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_29
P = P+8
t44 = P-8
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_18
P = P-8
t10 = stack[E]
E = E-1
t44 = P+6
stack[t44] = t10
E = E+1
stack[E] = 3
t10 = stack[E]
E = E-1
t44 = P+7
stack[t44] = t10
L77:t44 = P+7
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value>=right_value goto L80
t44 = 0
goto L81
L80:t44 = 1
L81:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L79
P = P+8
t44 = P-8
t10 = t44+7
t22 = P+7
stack[t22] = t10
t10 = t44+6
t22 = P+6
stack[t22] = t10
t10 = t44+5
t22 = P+5
stack[t22] = t10
t10 = t44+4
t22 = P+4
stack[t22] = t10
t10 = t44+3
t22 = P+3
stack[t22] = t10
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_82
P = P-8
goto L77
L79:L76:}; undefined
proc procedimiento_115 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L93
t44 = stack[t44]
goto L94
L93:t44 = heap[t44]
L94:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_43
E = E+1
stack[E] = 8
call procedimiento_72
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 32
t22 = t44+5
heap[t22] = 35
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 32
call procedimiento_39
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L96
stack[t10] = t44
goto L95
L96:heap[t10] = t44
L95:P = P-5
goto L90
}; undefined
proc procedimiento_117 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L99
t44 = stack[t44]
goto L100
L99:t44 = heap[t44]
L100:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_50
E = E+1
stack[E] = 8
call procedimiento_47
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 35
t22 = t44+5
heap[t22] = 35
t22 = t44+6
heap[t22] = 35
t22 = t44+7
heap[t22] = 32
call procedimiento_83
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L102
stack[t10] = t44
goto L101
L102:heap[t10] = t44
L101:P = P-5
goto L90
}; undefined
proc procedimiento_119 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L103
t44 = stack[t44]
goto L104
L103:t44 = heap[t44]
L104:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_72
E = E+1
stack[E] = 8
call procedimiento_4
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 35
t22 = t44+4
heap[t22] = 35
t22 = t44+5
heap[t22] = 35
t22 = t44+6
heap[t22] = 35
t22 = t44+7
heap[t22] = 35
call procedimiento_22
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L106
stack[t10] = t44
goto L105
L106:heap[t10] = t44
L105:}; undefined
proc procedimiento_114 {t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_2
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_89
P = P-5
E = E+1
stack[E] = 0
E = E+1
stack[E] = 1
t10 = stack[E]
E = E-1
prev = stack[E]
E = E-1
t22 = stack[E]
if prev==1 goto L92
if t10==t22 goto L92
E = E+1
stack[E] = prev
goto L91
L92:E = E+1
stack[E] = 1
P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_73
P = P-5
L91:E = E+1
stack[E] = 3
t10 = stack[E]
E = E-1
prev = stack[E]
E = E-1
t22 = stack[E]
if prev==1 goto L98
if t10==t22 goto L98
E = E+1
stack[E] = prev
goto L97
L98:E = E+1
stack[E] = 1
P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_26
P = P-5
L97:P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_93
P = P-5
L90:t44 = stack[E]
E = E-1
t44 = stack[E]
E = E-1
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_41
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_3
P = P-5
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L108
stack[t10] = t44
goto L107
L108:heap[t10] = t44
L107:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L109
stack[target_ref] = t10
goto L110
L109:heap[target_ref] = t10
L110:L86:}; undefined
proc procedimiento_113 {address = 5
E = E+1
stack[E] = address
call procedimiento_86
address = stack[E]
heap[address] = 4
i = 1
E = E+1
stack[E] = i
E = E+1
stack[E] = 8
call procedimiento_84
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 32
t22 = t44+5
heap[t22] = 124
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 32
call procedimiento_18
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
address = stack[E]
E = E-1
t33 = address+t10
heap[t33] = t44
t10 = t10+1
E = E+1
stack[E] = address
E = E+1
stack[E] = t10
E = E+1
stack[E] = 8
call procedimiento_91
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 32
t22 = t44+5
heap[t22] = 124
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 32
call procedimiento_21
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
address = stack[E]
E = E-1
t33 = address+t10
heap[t33] = t44
t10 = t10+1
E = E+1
stack[E] = address
E = E+1
stack[E] = t10
E = E+1
stack[E] = 8
call procedimiento_53
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 32
t22 = t44+5
heap[t22] = 124
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 32
call procedimiento_45
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
address = stack[E]
E = E-1
t33 = address+t10
heap[t33] = t44
t10 = t10+1
E = E+1
stack[E] = address
E = E+1
stack[E] = t10
E = E+1
stack[E] = 8
call procedimiento_31
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 32
t22 = t44+3
heap[t22] = 32
t22 = t44+4
heap[t22] = 32
t22 = t44+5
heap[t22] = 124
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 32
call procedimiento_42
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
address = stack[E]
E = E-1
t33 = address+t10
heap[t33] = t44
t10 = t10+1
E = E+1
stack[E] = address
E = E+1
stack[E] = t10
i = stack[E]
E = E-1
address = stack[E]
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_7
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_58
P = P-5
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
L85:t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value!=right_value goto L88
t44 = 0
goto L89
L88:t44 = 1
L89:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L87
P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
stack[t22] = t10
t10 = t44+3
t22 = P+3
stack[t22] = t10
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_51
P = P-5
goto L85
L87:t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
L84:}; undefined
proc procedimiento_123 {t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L112
t10 = stack[t10]
goto L113
L112:t10 = heap[t10]
L113:E = E+1
stack[E] = t10
t10 = 7
E = E+1
stack[E] = t10
call procedimiento_80
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L115
stack[t10] = t44
goto L114
L115:heap[t10] = t44
L114:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
L111:}; undefined
proc procedimiento_125 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = 7
E = E+1
stack[E] = t10
call procedimiento_63
E = E+1
stack[E] = 15
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L117
t44 = 0
goto L118
L117:t44 = 1
L118:E = E+1
stack[E] = t44
E = E+1
stack[E] = 11
call procedimiento_93
t44 = stack[E]
heap[t44] = 10
t22 = t44+1
heap[t22] = 109
t22 = t44+2
heap[t22] = 101
t22 = t44+3
heap[t22] = 110
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 97
t22 = t44+8
heap[t22] = 32
t22 = t44+9
heap[t22] = 49
t22 = t44+10
heap[t22] = 53
call procedimiento_65
E = E+1
stack[E] = 19
call procedimiento_54
t44 = stack[E]
heap[t44] = 18
t22 = t44+1
heap[t22] = 109
t22 = t44+2
heap[t22] = 97
t22 = t44+3
heap[t22] = 121
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 111
t22 = t44+8
heap[t22] = 32
t22 = t44+9
heap[t22] = 105
t22 = t44+10
heap[t22] = 103
t22 = t44+11
heap[t22] = 117
t22 = t44+12
heap[t22] = 97
t22 = t44+13
heap[t22] = 108
t22 = t44+14
heap[t22] = 32
t22 = t44+15
heap[t22] = 97
t22 = t44+16
heap[t22] = 32
t22 = t44+17
heap[t22] = 49
t22 = t44+18
heap[t22] = 53
call procedimiento_30
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
t33 = stack[E]
E = E-1
if t33==1 goto L119
E = E+1
stack[E] = t10
goto L120
L119:E = E+1
stack[E] = t22
L120:E = E+1
stack[E] = 0
call procedimiento_38
call procedimiento_43
print('%c',10)
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+5
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+6
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
stack[E] = 2
call procedimiento_99
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_58
E = E+1
stack[E] = 0
call procedimiento_42
call procedimiento_5
print('%c',10)
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
call procedimiento_16
call procedimiento_39
E = E+1
stack[E] = 0
call procedimiento_58
call procedimiento_97
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
double_integer_part = t10
decimal_part = double_integer_part%1
double_integer_part = double_integer_part-decimal_part
double_decimal_part = t10%1
double_decimal_part = double_decimal_part*100000
decimal_part = double_decimal_part%1
double_decimal_part = double_decimal_part-decimal_part
if double_decimal_part>=0 goto L121
double_decimal_part = double_decimal_part*-1
L121:E = E+1
stack[E] = double_integer_part
call procedimiento_7
E = E+1
stack[E] = 2
call procedimiento_35
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = 46
E = E+1
stack[E] = t22
call procedimiento_98
E = E+1
stack[E] = double_decimal_part
call procedimiento_48
call procedimiento_79
call procedimiento_35
E = E+1
stack[E] = 0
call procedimiento_97
call procedimiento_84
print('%c',10)
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
call procedimiento_36
call procedimiento_51
E = E+1
stack[E] = 0
call procedimiento_49
call procedimiento_23
print('%c',10)
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_38
call procedimiento_27
print('%c',10)
t44 = P+6
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
call procedimiento_93
call procedimiento_83
E = E+1
stack[E] = 0
call procedimiento_27
call procedimiento_41
print('%c',10)
t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
call procedimiento_2
t44 = stack[E]
heap[t44] = 2
t22 = t44+1
heap[t22] = 57
t22 = t44+2
heap[t22] = 48
call procedimiento_90
t10 = stack[E]
E = E+1
stack[E] = 0
call procedimiento_86
call procedimiento_5
t10 = stack[E]
E = E-1
if t10>255 goto L122
if t10<0 goto L122
E = E+1
stack[E] = t10
goto L123
L122:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L123:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L125
stack[t10] = t44
goto L124
L125:heap[t10] = t44
L124:t44 = P+2
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 4
call procedimiento_3
t44 = stack[E]
heap[t44] = 3
t22 = t44+1
heap[t22] = 53
t22 = t44+2
heap[t22] = 50
t22 = t44+3
heap[t22] = 54
call procedimiento_73
t10 = stack[E]
E = E+1
stack[E] = 0
call procedimiento_74
call procedimiento_49
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L127
stack[t10] = t44
goto L126
L127:heap[t10] = t44
L126:t44 = P+3
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 9
call procedimiento_74
t44 = stack[E]
heap[t44] = 8
t22 = t44+1
heap[t22] = 49
t22 = t44+2
heap[t22] = 50
t22 = t44+3
heap[t22] = 56
t22 = t44+4
heap[t22] = 52
t22 = t44+5
heap[t22] = 46
t22 = t44+6
heap[t22] = 52
t22 = t44+7
heap[t22] = 53
t22 = t44+8
heap[t22] = 54
call procedimiento_61
E = E+1
stack[E] = 0
call procedimiento_64
call procedimiento_6
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L129
stack[t10] = t44
goto L128
L129:heap[t10] = t44
L128:t44 = P+5
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
call procedimiento_56
call procedimiento_52
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L131
stack[t10] = t44
goto L130
L131:heap[t10] = t44
L130:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
stack[E] = 2
call procedimiento_64
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_19
E = E+1
stack[E] = 0
call procedimiento_88
call procedimiento_15
print('%c',10)
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
call procedimiento_59
call procedimiento_40
E = E+1
stack[E] = 0
call procedimiento_66
call procedimiento_32
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
double_integer_part = t10
decimal_part = double_integer_part%1
double_integer_part = double_integer_part-decimal_part
double_decimal_part = t10%1
double_decimal_part = double_decimal_part*100000
decimal_part = double_decimal_part%1
double_decimal_part = double_decimal_part-decimal_part
if double_decimal_part>=0 goto L132
double_decimal_part = double_decimal_part*-1
L132:E = E+1
stack[E] = double_integer_part
call procedimiento_71
E = E+1
stack[E] = 2
call procedimiento_42
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = 46
E = E+1
stack[E] = t22
call procedimiento_55
E = E+1
stack[E] = double_decimal_part
call procedimiento_59
call procedimiento_85
call procedimiento_86
E = E+1
stack[E] = 0
call procedimiento_97
call procedimiento_74
print('%c',10)
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_65
call procedimiento_45
print('%c',10)
t44 = P+5
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
double_integer_part = t10
decimal_part = double_integer_part%1
double_integer_part = double_integer_part-decimal_part
double_decimal_part = t10%1
double_decimal_part = double_decimal_part*100000
decimal_part = double_decimal_part%1
double_decimal_part = double_decimal_part-decimal_part
if double_decimal_part>=0 goto L133
double_decimal_part = double_decimal_part*-1
L133:E = E+1
stack[E] = double_integer_part
call procedimiento_64
E = E+1
stack[E] = 2
call procedimiento_67
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = 46
E = E+1
stack[E] = t22
call procedimiento_63
E = E+1
stack[E] = double_decimal_part
call procedimiento_35
call procedimiento_17
call procedimiento_45
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L135
stack[t10] = t44
goto L134
L135:heap[t10] = t44
L134:t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_17
call procedimiento_72
print('%c',10)
L116:}; undefined
proc procedimiento_129 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L164
t44 = stack[t44]
goto L165
L164:t44 = heap[t44]
L165:E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
E = E+1
stack[E] = 5
call procedimiento_30
E = E+1
stack[E] = 95
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L167
stack[t10] = t44
goto L166
L167:heap[t10] = t44
L166:}; undefined
proc procedimiento_131 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 8
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 1
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L168
t44 = stack[t44]
goto L169
L168:t44 = heap[t44]
L169:E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
E = E+1
stack[E] = 5
call procedimiento_26
E = E+1
stack[E] = 95
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L171
stack[t10] = t44
goto L170
L171:heap[t10] = t44
L170:}; undefined
proc procedimiento_128 {t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 7
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<=right_value goto L162
t44 = 0
goto L163
L162:t44 = 1
L163:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L161
P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_94
P = P-5
goto L160
L161:P = P+5
t44 = P-5
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_67
P = P-5
L160:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L172
stack[target_ref] = t10
goto L173
L172:heap[target_ref] = t10
L173:L156:}; undefined
proc procedimiento_135 {t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L185
t44 = stack[t44]
goto L186
L185:t44 = heap[t44]
L186:E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
E = E+1
stack[E] = 7
call procedimiento_20
t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L188
stack[t10] = t44
goto L187
L188:heap[t10] = t44
L187:}; undefined
proc procedimiento_137 {t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 8
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 1
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L189
t44 = stack[t44]
goto L190
L189:t44 = heap[t44]
L190:E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
E = E+1
stack[E] = 7
call procedimiento_89
t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L192
stack[t10] = t44
goto L191
L192:heap[t10] = t44
L191:}; undefined
proc procedimiento_134 {t44 = P+6
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 1
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 7
call procedimiento_15
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 7
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<=right_value goto L183
t44 = 0
goto L184
L183:t44 = 1
L184:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L182
P = P+7
t44 = P-7
t10 = t44+6
t22 = P+6
t10 = stack[t10]
stack[t22] = t10
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_17
P = P-7
goto L181
L182:P = P+7
t44 = P-7
t10 = t44+6
t22 = P+6
t10 = stack[t10]
stack[t22] = t10
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_82
P = P-7
L181:t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L193
stack[target_ref] = t10
goto L194
L193:heap[target_ref] = t10
L194:L177:}; undefined
proc procedimiento_141 {t44 = P
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+6
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
E = E+1
stack[E] = 7
call procedimiento_33
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_96
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_60
call procedimiento_37
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L212
stack[t10] = t44
goto L211
L212:heap[t10] = t44
L211:t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L213
stack[target_ref] = t10
goto L214
L213:heap[target_ref] = t10
L214:L207:}; undefined
proc procedimiento_140 {t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L205
stack[t10] = t44
goto L204
L205:heap[t10] = t44
L204:E = E+1
stack[E] = 1
call procedimiento_98
t44 = stack[E]
heap[t44] = 0
call procedimiento_90
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
L206:t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 8
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L209
t44 = 0
goto L210
L209:t44 = 1
L210:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L208
P = P+7
t44 = P-7
t10 = t44+6
t22 = P+6
t10 = stack[t10]
stack[t22] = t10
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_48
P = P-7
goto L206
L208:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_54
call procedimiento_38
print('%c',10)
t44 = P+6
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+6
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L215
stack[target_ref] = t10
goto L216
L215:heap[target_ref] = t10
L216:L200:}; undefined
proc procedimiento_127 {E = E+1
stack[E] = 2
call procedimiento_78
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_62
E = E+1
stack[E] = 72
t10 = stack[E]
E = E-1
if t10>255 goto L137
if t10<0 goto L137
E = E+1
stack[E] = t10
goto L138
L137:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L138:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_57
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_56
call procedimiento_44
E = E+1
stack[E] = 111
t10 = stack[E]
E = E-1
if t10>255 goto L139
if t10<0 goto L139
E = E+1
stack[E] = t10
goto L140
L139:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L140:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_9
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_96
call procedimiento_54
E = E+1
stack[E] = 108
t10 = stack[E]
E = E-1
if t10>255 goto L141
if t10<0 goto L141
E = E+1
stack[E] = t10
goto L142
L141:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L142:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_21
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_64
call procedimiento_1
E = E+1
stack[E] = 97
t10 = stack[E]
E = E-1
if t10>255 goto L143
if t10<0 goto L143
E = E+1
stack[E] = t10
goto L144
L143:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L144:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_88
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_86
call procedimiento_83
E = E+1
stack[E] = 2
call procedimiento_2
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_83
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_71
E = E+1
stack[E] = 109
t10 = stack[E]
E = E-1
if t10>255 goto L145
if t10<0 goto L145
E = E+1
stack[E] = t10
goto L146
L145:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L146:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_21
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_19
call procedimiento_54
E = E+1
stack[E] = 117
t10 = stack[E]
E = E-1
if t10>255 goto L147
if t10<0 goto L147
E = E+1
stack[E] = t10
goto L148
L147:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L148:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_51
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_50
call procedimiento_96
E = E+1
stack[E] = 110
t10 = stack[E]
E = E-1
if t10>255 goto L149
if t10<0 goto L149
E = E+1
stack[E] = t10
goto L150
L149:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L150:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_70
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_2
call procedimiento_5
E = E+1
stack[E] = 100
t10 = stack[E]
E = E-1
if t10>255 goto L151
if t10<0 goto L151
E = E+1
stack[E] = t10
goto L152
L151:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L152:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_23
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_87
call procedimiento_83
E = E+1
stack[E] = 111
t10 = stack[E]
E = E-1
if t10>255 goto L153
if t10<0 goto L153
E = E+1
stack[E] = t10
goto L154
L153:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L154:right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_99
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_45
call procedimiento_57
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_61
call procedimiento_2
print('%c',10)
E = E+1
stack[E] = 2
E = E+1
stack[E] = 8
E = E+1
stack[E] = 2
E = E+1
stack[E] = 6
call procedimiento_95
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
E = E+1
stack[E] = 14
call procedimiento_8
t44 = stack[E]
heap[t44] = 13
t22 = t44+1
heap[t22] = 116
t22 = t44+2
heap[t22] = 111
t22 = t44+3
heap[t22] = 67
t22 = t44+4
heap[t22] = 104
t22 = t44+5
heap[t22] = 97
t22 = t44+6
heap[t22] = 114
t22 = t44+7
heap[t22] = 65
t22 = t44+8
heap[t22] = 114
t22 = t44+9
heap[t22] = 114
t22 = t44+10
heap[t22] = 97
t22 = t44+11
heap[t22] = 121
t22 = t44+12
heap[t22] = 40
t22 = t44+13
heap[t22] = 41
call procedimiento_88
E = E+1
stack[E] = 0
call procedimiento_82
call procedimiento_70
print('%c',10)
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_25
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
L155:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 16
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L158
t44 = 0
goto L159
L158:t44 = 1
L159:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L157
P = P+6
t44 = P-6
t10 = t44+4
t22 = P+4
stack[t22] = t10
t10 = t44+3
t22 = P+3
stack[t22] = t10
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_52
P = P-6
goto L155
L157:t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t44 = heap[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t44 = P+5
stack[t44] = t10
t44 = P+4
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L175
stack[t10] = t44
goto L174
L175:heap[t10] = t44
L174:L176:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L179
t44 = 0
goto L180
L179:t44 = 1
L180:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L178
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+6
stack[t22] = t10
t10 = t44+4
t22 = P+5
stack[t22] = t10
t10 = t44+3
t22 = P+4
stack[t22] = t10
t10 = t44+2
t22 = P+3
stack[t22] = t10
t10 = t44+1
t22 = P+2
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_21
P = P-6
goto L176
L178:t44 = P+4
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L196
stack[t10] = t44
goto L195
L196:heap[t10] = t44
L195:t44 = P+5
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L198
stack[t10] = t44
goto L197
L198:heap[t10] = t44
L197:L199:t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L202
t44 = 0
goto L203
L202:t44 = 1
L203:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L201
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+6
stack[t22] = t10
t10 = t44+4
t22 = P+5
stack[t22] = t10
t10 = t44+3
t22 = P+4
stack[t22] = t10
t10 = t44+2
t22 = P+3
stack[t22] = t10
t10 = t44+1
t22 = P+2
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_34
P = P-6
goto L199
L201:E = E+1
stack[E] = 14
call procedimiento_54
t44 = stack[E]
heap[t44] = 13
t22 = t44+1
heap[t22] = 116
t22 = t44+2
heap[t22] = 111
t22 = t44+3
heap[t22] = 85
t22 = t44+4
heap[t22] = 112
t22 = t44+5
heap[t22] = 112
t22 = t44+6
heap[t22] = 101
t22 = t44+7
heap[t22] = 114
t22 = t44+8
heap[t22] = 67
t22 = t44+9
heap[t22] = 97
t22 = t44+10
heap[t22] = 115
t22 = t44+11
heap[t22] = 101
t22 = t44+12
heap[t22] = 40
t22 = t44+13
heap[t22] = 41
call procedimiento_84
E = E+1
stack[E] = 0
call procedimiento_9
call procedimiento_3
print('%c',10)
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_54
call procedimiento_87
call procedimiento_80
E = E+1
stack[E] = 0
call procedimiento_98
call procedimiento_5
print('%c',10)
t44 = P+1
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_33
call procedimiento_40
call procedimiento_98
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L218
stack[t10] = t44
goto L217
L218:heap[t10] = t44
L217:E = E+1
stack[E] = 14
call procedimiento_54
t44 = stack[E]
heap[t44] = 13
t22 = t44+1
heap[t22] = 116
t22 = t44+2
heap[t22] = 111
t22 = t44+3
heap[t22] = 76
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 119
t22 = t44+6
heap[t22] = 101
t22 = t44+7
heap[t22] = 114
t22 = t44+8
heap[t22] = 67
t22 = t44+9
heap[t22] = 97
t22 = t44+10
heap[t22] = 115
t22 = t44+11
heap[t22] = 101
t22 = t44+12
heap[t22] = 40
t22 = t44+13
heap[t22] = 41
call procedimiento_15
E = E+1
stack[E] = 0
call procedimiento_1
call procedimiento_64
print('%c',10)
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_38
call procedimiento_83
call procedimiento_28
E = E+1
stack[E] = 0
call procedimiento_12
call procedimiento_37
print('%c',10)
L136:}; undefined
proc procedimiento_149 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
L250:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L254
t44 = 0
goto L255
L254:t44 = 1
L255:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L253
E = E+1
stack[E] = 2
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L256
t44 = stack[t44]
goto L257
L256:t44 = heap[t44]
L257:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_23
E = E+1
stack[E] = 48
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L258
if t10<0 goto L258
E = E+1
stack[E] = t10
goto L259
L258:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L259:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L261
stack[t10] = t44
goto L260
L261:heap[t10] = t44
L260:L252:t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L262
stack[target_ref] = t10
goto L263
L262:heap[target_ref] = t10
L263:E = E+1
stack[E] = t10
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L264
stack[t10] = t44
goto L265
L264:heap[t10] = t44
L265:goto L250
L265:goto L250
L253:}; undefined
proc procedimiento_148 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
L238:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 11
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L242
t44 = 0
goto L243
L242:t44 = 1
L243:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L241
E = E+1
stack[E] = 1
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L244
t44 = stack[t44]
goto L245
L244:t44 = heap[t44]
L245:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_56
E = E+1
stack[E] = 97
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L246
if t10<0 goto L246
E = E+1
stack[E] = t10
goto L247
L246:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L247:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L249
stack[t10] = t44
goto L248
L249:heap[t10] = t44
L248:P = P+5
t44 = P-5
t10 = t44+4
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_85
P = P-5
L251:E = E+1
stack[E] = 2
call procedimiento_92
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_91
E = E+1
stack[E] = 1
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_94
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_84
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_74
call procedimiento_0
E = E+1
stack[E] = 2
call procedimiento_89
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_86
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_81
E = E+1
stack[E] = 2
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_3
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_71
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_31
call procedimiento_64
E = E+1
stack[E] = 3
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_76
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_91
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_38
call procedimiento_1
E = E+1
stack[E] = 4
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_5
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_16
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_42
call procedimiento_78
E = E+1
stack[E] = 5
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_27
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_98
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_0
call procedimiento_12
E = E+1
stack[E] = 6
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_14
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_71
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_4
call procedimiento_73
E = E+1
stack[E] = 7
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_53
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_26
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_74
call procedimiento_1
E = E+1
stack[E] = 8
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_34
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_90
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_28
call procedimiento_12
E = E+1
stack[E] = 9
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_54
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_89
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_86
call procedimiento_18
E = E+1
stack[E] = 10
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_51
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_8
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_89
call procedimiento_63
E = E+1
stack[E] = 11
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 5
call procedimiento_16
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_3
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_77
call procedimiento_23
E = E+1
stack[E] = 0
call procedimiento_86
call procedimiento_82
print('%c',10)
L240:t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L266
stack[target_ref] = t10
goto L267
L266:heap[target_ref] = t10
L267:E = E+1
stack[E] = t10
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L268
stack[t10] = t44
goto L269
L268:heap[t10] = t44
L269:goto L238
L269:goto L238
L241:}; undefined
proc procedimiento_147 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
L226:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L230
t44 = 0
goto L231
L230:t44 = 1
L231:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L229
E = E+1
stack[E] = 0
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L232
t44 = stack[t44]
goto L233
L232:t44 = heap[t44]
L233:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 4
call procedimiento_78
E = E+1
stack[E] = 65
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L234
if t10<0 goto L234
E = E+1
stack[E] = t10
goto L235
L234:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L235:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L237
stack[t10] = t44
goto L236
L237:heap[t10] = t44
L236:E = E+1
stack[E] = 0
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 4
call procedimiento_72
t10 = stack[E]
stack[E] = 2
call procedimiento_45
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_90
E = E+1
stack[E] = 0
call procedimiento_47
call procedimiento_98
print('%c',10)
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_79
P = P-4
L239:L228:t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L270
stack[target_ref] = t10
goto L271
L270:heap[target_ref] = t10
L271:E = E+1
stack[E] = t10
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L272
stack[t10] = t44
goto L273
L272:heap[t10] = t44
L273:goto L226
L273:goto L226
L229:}; undefined
proc procedimiento_146 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
L220:t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<=right_value goto L224
t44 = 0
goto L225
L224:t44 = 1
L225:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L223
E = E+1
stack[E] = 2
call procedimiento_72
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_61
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
call procedimiento_20
call procedimiento_49
call procedimiento_53
E = E+1
stack[E] = 0
call procedimiento_20
call procedimiento_32
print('%c',10)
P = P+3
t44 = P-3
t10 = t44+2
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_21
P = P-3
L227:L222:t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L274
stack[target_ref] = t10
goto L275
L274:heap[target_ref] = t10
L275:E = E+1
stack[E] = t10
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L276
stack[t10] = t44
goto L277
L276:heap[t10] = t44
L277:goto L220
L277:goto L220
L223:}; undefined
proc procedimiento_145 {E = E+1
stack[E] = 12
E = E+1
stack[E] = 1
E = E+1
stack[E] = 2
call procedimiento_9
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
E = E+1
stack[E] = 46
call procedimiento_64
t44 = stack[E]
heap[t44] = 45
t22 = t44+1
heap[t22] = 45
t22 = t44+2
heap[t22] = 45
t22 = t44+3
heap[t22] = 45
t22 = t44+4
heap[t22] = 45
t22 = t44+5
heap[t22] = 45
t22 = t44+6
heap[t22] = 45
t22 = t44+7
heap[t22] = 45
t22 = t44+8
heap[t22] = 45
t22 = t44+9
heap[t22] = 45
t22 = t44+10
heap[t22] = 45
t22 = t44+11
heap[t22] = 45
t22 = t44+12
heap[t22] = 45
t22 = t44+13
heap[t22] = 70
t22 = t44+14
heap[t22] = 79
t22 = t44+15
heap[t22] = 82
t22 = t44+16
heap[t22] = 45
t22 = t44+17
heap[t22] = 45
t22 = t44+18
heap[t22] = 45
t22 = t44+19
heap[t22] = 45
t22 = t44+20
heap[t22] = 45
t22 = t44+21
heap[t22] = 45
t22 = t44+22
heap[t22] = 45
t22 = t44+23
heap[t22] = 45
t22 = t44+24
heap[t22] = 45
t22 = t44+25
heap[t22] = 45
t22 = t44+26
heap[t22] = 45
t22 = t44+27
heap[t22] = 45
t22 = t44+28
heap[t22] = 45
t22 = t44+29
heap[t22] = 45
t22 = t44+30
heap[t22] = 45
t22 = t44+31
heap[t22] = 45
t22 = t44+32
heap[t22] = 45
t22 = t44+33
heap[t22] = 45
t22 = t44+34
heap[t22] = 45
t22 = t44+35
heap[t22] = 45
t22 = t44+36
heap[t22] = 45
t22 = t44+37
heap[t22] = 45
t22 = t44+38
heap[t22] = 45
t22 = t44+39
heap[t22] = 45
t22 = t44+40
heap[t22] = 45
t22 = t44+41
heap[t22] = 45
t22 = t44+42
heap[t22] = 45
t22 = t44+43
heap[t22] = 45
t22 = t44+44
heap[t22] = 45
t22 = t44+45
heap[t22] = 45
call procedimiento_12
E = E+1
stack[E] = 0
call procedimiento_32
call procedimiento_28
print('%c',10)
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+2
stack[t22] = t10
t10 = t44
t22 = P+1
stack[t22] = t10
call procedimiento_87
P = P-2
L221:L219:}; undefined
proc procedimiento_159 {E = E+1
stack[E] = 2
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L315
t44 = stack[t44]
goto L316
L315:t44 = heap[t44]
L316:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_32
E = E+1
stack[E] = 48
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L317
if t10<0 goto L317
E = E+1
stack[E] = t10
goto L318
L317:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L318:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L320
stack[t10] = t44
goto L319
L320:heap[t10] = t44
L319:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L321
stack[target_ref] = t10
goto L322
L321:heap[target_ref] = t10
L322:L311:}; undefined
proc procedimiento_158 {E = E+1
stack[E] = 1
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L302
t44 = stack[t44]
goto L303
L302:t44 = heap[t44]
L303:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_39
E = E+1
stack[E] = 97
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L304
if t10<0 goto L304
E = E+1
stack[E] = t10
goto L305
L304:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L305:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L307
stack[t10] = t44
goto L306
L307:heap[t10] = t44
L306:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L309
stack[t10] = t44
goto L308
L309:heap[t10] = t44
L308:L310:t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L313
t44 = 0
goto L314
L313:t44 = 1
L314:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L312
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_23
P = P-6
goto L310
L312:E = E+1
stack[E] = 2
call procedimiento_13
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_62
E = E+1
stack[E] = 1
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_42
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_59
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_21
call procedimiento_38
E = E+1
stack[E] = 2
call procedimiento_82
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_56
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_25
E = E+1
stack[E] = 2
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_2
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_34
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_79
call procedimiento_60
E = E+1
stack[E] = 3
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_63
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_57
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_78
call procedimiento_64
E = E+1
stack[E] = 4
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_29
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_72
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_51
call procedimiento_82
E = E+1
stack[E] = 5
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_4
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_55
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_65
call procedimiento_73
E = E+1
stack[E] = 6
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_46
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_11
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_31
call procedimiento_46
E = E+1
stack[E] = 7
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_11
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_1
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_12
call procedimiento_69
E = E+1
stack[E] = 8
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_39
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_31
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_21
call procedimiento_62
E = E+1
stack[E] = 9
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_69
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_9
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_33
call procedimiento_32
E = E+1
stack[E] = 10
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_36
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_67
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_2
call procedimiento_18
E = E+1
stack[E] = 11
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_84
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_26
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_65
call procedimiento_42
E = E+1
stack[E] = 0
call procedimiento_81
call procedimiento_92
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L323
stack[target_ref] = t10
goto L324
L323:heap[target_ref] = t10
L324:L298:}; undefined
proc procedimiento_157 {E = E+1
stack[E] = 0
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L289
t44 = stack[t44]
goto L290
L289:t44 = heap[t44]
L290:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_0
E = E+1
stack[E] = 65
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L291
if t10<0 goto L291
E = E+1
stack[E] = t10
goto L292
L291:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L292:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L294
stack[t10] = t44
goto L293
L294:heap[t10] = t44
L293:E = E+1
stack[E] = 0
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_83
t10 = stack[E]
stack[E] = 2
call procedimiento_41
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_92
E = E+1
stack[E] = 0
call procedimiento_22
call procedimiento_93
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L296
stack[t10] = t44
goto L295
L296:heap[t10] = t44
L295:L297:t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 11
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L300
t44 = 0
goto L301
L300:t44 = 1
L301:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L299
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_17
P = P-6
goto L297
L299:t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L325
stack[target_ref] = t10
goto L326
L325:heap[target_ref] = t10
L326:L285:}; undefined
proc procedimiento_156 {E = E+1
stack[E] = 2
call procedimiento_0
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_90
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
call procedimiento_55
call procedimiento_30
call procedimiento_89
E = E+1
stack[E] = 0
call procedimiento_33
call procedimiento_59
print('%c',10)
L284:t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L287
t44 = 0
goto L288
L287:t44 = 1
L288:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L286
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_13
P = P-6
goto L284
L286:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L327
stack[target_ref] = t10
goto L328
L327:heap[target_ref] = t10
L328:L280:}; undefined
proc procedimiento_155 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
E = E+1
stack[E] = 12
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_66
t10 = stack[E]
E = E-1
t44 = P+5
stack[t44] = t10
E = E+1
stack[E] = 48
call procedimiento_85
t44 = stack[E]
heap[t44] = 47
t22 = t44+1
heap[t22] = 45
t22 = t44+2
heap[t22] = 45
t22 = t44+3
heap[t22] = 45
t22 = t44+4
heap[t22] = 45
t22 = t44+5
heap[t22] = 45
t22 = t44+6
heap[t22] = 45
t22 = t44+7
heap[t22] = 45
t22 = t44+8
heap[t22] = 45
t22 = t44+9
heap[t22] = 45
t22 = t44+10
heap[t22] = 45
t22 = t44+11
heap[t22] = 45
t22 = t44+12
heap[t22] = 45
t22 = t44+13
heap[t22] = 87
t22 = t44+14
heap[t22] = 72
t22 = t44+15
heap[t22] = 73
t22 = t44+16
heap[t22] = 76
t22 = t44+17
heap[t22] = 69
t22 = t44+18
heap[t22] = 45
t22 = t44+19
heap[t22] = 45
t22 = t44+20
heap[t22] = 45
t22 = t44+21
heap[t22] = 45
t22 = t44+22
heap[t22] = 45
t22 = t44+23
heap[t22] = 45
t22 = t44+24
heap[t22] = 45
t22 = t44+25
heap[t22] = 45
t22 = t44+26
heap[t22] = 45
t22 = t44+27
heap[t22] = 45
t22 = t44+28
heap[t22] = 45
t22 = t44+29
heap[t22] = 45
t22 = t44+30
heap[t22] = 45
t22 = t44+31
heap[t22] = 45
t22 = t44+32
heap[t22] = 45
t22 = t44+33
heap[t22] = 45
t22 = t44+34
heap[t22] = 45
t22 = t44+35
heap[t22] = 45
t22 = t44+36
heap[t22] = 45
t22 = t44+37
heap[t22] = 45
t22 = t44+38
heap[t22] = 45
t22 = t44+39
heap[t22] = 45
t22 = t44+40
heap[t22] = 45
t22 = t44+41
heap[t22] = 45
t22 = t44+42
heap[t22] = 45
t22 = t44+43
heap[t22] = 45
t22 = t44+44
heap[t22] = 45
t22 = t44+45
heap[t22] = 45
t22 = t44+46
heap[t22] = 45
t22 = t44+47
heap[t22] = 45
call procedimiento_60
E = E+1
stack[E] = 0
call procedimiento_9
call procedimiento_79
print('%c',10)
L279:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L282
t44 = 0
goto L283
L282:t44 = 1
L283:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L281
P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
stack[t22] = t10
t10 = t44+4
t22 = P+4
stack[t22] = t10
t10 = t44+3
t22 = P+3
stack[t22] = t10
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_6
P = P-6
goto L279
L281:L278:}; undefined
proc procedimiento_169 {E = E+1
stack[E] = 2
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L358
t44 = stack[t44]
goto L359
L358:t44 = heap[t44]
L359:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_6
E = E+1
stack[E] = 48
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L360
if t10<0 goto L360
E = E+1
stack[E] = t10
goto L361
L360:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L361:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L363
stack[t10] = t44
goto L362
L363:heap[t10] = t44
L362:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L364
stack[target_ref] = t10
goto L365
L364:heap[target_ref] = t10
L365:L356:}; undefined
proc procedimiento_168 {E = E+1
stack[E] = 1
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L347
t44 = stack[t44]
goto L348
L347:t44 = heap[t44]
L348:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_73
E = E+1
stack[E] = 97
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L349
if t10<0 goto L349
E = E+1
stack[E] = t10
goto L350
L349:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L350:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L352
stack[t10] = t44
goto L351
L352:heap[t10] = t44
L351:t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L354
stack[t10] = t44
goto L353
L354:heap[t10] = t44
L353:L355:P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_86
P = P-6
t44 = P+4
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L366
t44 = 0
goto L367
L366:t44 = 1
L367:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==1 goto L355
L357:E = E+1
stack[E] = 2
call procedimiento_10
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_56
E = E+1
stack[E] = 1
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_34
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_5
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_40
call procedimiento_89
E = E+1
stack[E] = 2
call procedimiento_5
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_26
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_71
E = E+1
stack[E] = 2
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_34
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_90
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_80
call procedimiento_22
E = E+1
stack[E] = 3
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_52
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_11
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_11
call procedimiento_57
E = E+1
stack[E] = 4
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_52
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_97
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_34
call procedimiento_41
E = E+1
stack[E] = 5
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_43
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_4
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_54
call procedimiento_63
E = E+1
stack[E] = 6
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_16
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_18
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_45
call procedimiento_20
E = E+1
stack[E] = 7
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_29
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_96
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_51
call procedimiento_40
E = E+1
stack[E] = 8
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_69
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_64
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_24
call procedimiento_71
E = E+1
stack[E] = 9
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_39
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_96
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_36
call procedimiento_65
E = E+1
stack[E] = 10
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_85
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_67
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_44
call procedimiento_0
E = E+1
stack[E] = 11
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_65
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_93
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_53
call procedimiento_11
E = E+1
stack[E] = 0
call procedimiento_87
call procedimiento_14
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L368
stack[target_ref] = t10
goto L369
L368:heap[target_ref] = t10
L369:L345:}; undefined
proc procedimiento_167 {E = E+1
stack[E] = 0
t44 = P+5
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
if t10==1 goto L336
t44 = stack[t44]
goto L337
L336:t44 = heap[t44]
L337:E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_31
E = E+1
stack[E] = 65
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L338
if t10<0 goto L338
E = E+1
stack[E] = t10
goto L339
L338:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L339:t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L341
stack[t10] = t44
goto L340
L341:heap[t10] = t44
L340:E = E+1
stack[E] = 0
t44 = P+5
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_51
t10 = stack[E]
stack[E] = 2
call procedimiento_85
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_52
E = E+1
stack[E] = 0
call procedimiento_93
call procedimiento_36
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L343
stack[t10] = t44
goto L342
L343:heap[t10] = t44
L342:L344:P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_24
P = P-6
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 11
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L370
t44 = 0
goto L371
L370:t44 = 1
L371:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==1 goto L344
L346:t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L372
stack[target_ref] = t10
goto L373
L372:heap[target_ref] = t10
L373:L334:}; undefined
proc procedimiento_166 {E = E+1
stack[E] = 2
call procedimiento_31
t44 = stack[E]
heap[t44] = 1
t22 = t44+1
heap[t22] = 32
call procedimiento_44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
call procedimiento_29
call procedimiento_8
call procedimiento_1
E = E+1
stack[E] = 0
call procedimiento_36
call procedimiento_30
print('%c',10)
L333:P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
t10 = stack[t10]
stack[t22] = t10
t10 = t44+4
t22 = P+4
t10 = stack[t10]
stack[t22] = t10
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_26
P = P-6
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L374
t44 = 0
goto L375
L374:t44 = 1
L375:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==1 goto L333
L335:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
t10 = t10+1
target_ref = stack[E]
E = E-1
where_to_use = stack[E]
E = E-1
if where_to_use==1 goto L376
stack[target_ref] = t10
goto L377
L376:heap[target_ref] = t10
L377:L331:}; undefined
proc procedimiento_165 {E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 0
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
E = E+1
stack[E] = 12
E = E+1
stack[E] = 1
E = E+1
stack[E] = 6
call procedimiento_88
t10 = stack[E]
E = E-1
t44 = P+5
stack[t44] = t10
E = E+1
stack[E] = 51
call procedimiento_35
t44 = stack[E]
heap[t44] = 50
t22 = t44+1
heap[t22] = 45
t22 = t44+2
heap[t22] = 45
t22 = t44+3
heap[t22] = 45
t22 = t44+4
heap[t22] = 45
t22 = t44+5
heap[t22] = 45
t22 = t44+6
heap[t22] = 45
t22 = t44+7
heap[t22] = 45
t22 = t44+8
heap[t22] = 45
t22 = t44+9
heap[t22] = 45
t22 = t44+10
heap[t22] = 45
t22 = t44+11
heap[t22] = 45
t22 = t44+12
heap[t22] = 45
t22 = t44+13
heap[t22] = 68
t22 = t44+14
heap[t22] = 79
t22 = t44+15
heap[t22] = 32
t22 = t44+16
heap[t22] = 87
t22 = t44+17
heap[t22] = 72
t22 = t44+18
heap[t22] = 73
t22 = t44+19
heap[t22] = 76
t22 = t44+20
heap[t22] = 69
t22 = t44+21
heap[t22] = 45
t22 = t44+22
heap[t22] = 45
t22 = t44+23
heap[t22] = 45
t22 = t44+24
heap[t22] = 45
t22 = t44+25
heap[t22] = 45
t22 = t44+26
heap[t22] = 45
t22 = t44+27
heap[t22] = 45
t22 = t44+28
heap[t22] = 45
t22 = t44+29
heap[t22] = 45
t22 = t44+30
heap[t22] = 45
t22 = t44+31
heap[t22] = 45
t22 = t44+32
heap[t22] = 45
t22 = t44+33
heap[t22] = 45
t22 = t44+34
heap[t22] = 45
t22 = t44+35
heap[t22] = 45
t22 = t44+36
heap[t22] = 45
t22 = t44+37
heap[t22] = 45
t22 = t44+38
heap[t22] = 45
t22 = t44+39
heap[t22] = 45
t22 = t44+40
heap[t22] = 45
t22 = t44+41
heap[t22] = 45
t22 = t44+42
heap[t22] = 45
t22 = t44+43
heap[t22] = 45
t22 = t44+44
heap[t22] = 45
t22 = t44+45
heap[t22] = 45
t22 = t44+46
heap[t22] = 45
t22 = t44+47
heap[t22] = 45
t22 = t44+48
heap[t22] = 45
t22 = t44+49
heap[t22] = 45
t22 = t44+50
heap[t22] = 45
call procedimiento_40
E = E+1
stack[E] = 0
call procedimiento_96
call procedimiento_37
print('%c',10)
L330:P = P+6
t44 = P-6
t10 = t44+5
t22 = P+5
stack[t22] = t10
t10 = t44+4
t22 = P+4
stack[t22] = t10
t10 = t44+3
t22 = P+3
stack[t22] = t10
t10 = t44+2
t22 = P+2
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_40
P = P-6
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 3
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L378
t44 = 0
goto L379
L378:t44 = 1
L379:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==1 goto L330
L332:L329:}; undefined
proc procedimiento_178 {E = E+1
stack[E] = 7
call procedimiento_7
t44 = stack[E]
heap[t44] = 6
t22 = t44+1
heap[t22] = 69
t22 = t44+2
heap[t22] = 114
t22 = t44+3
heap[t22] = 114
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 33
call procedimiento_86
E = E+1
stack[E] = 0
call procedimiento_66
call procedimiento_9
print('%c',10)
}; undefined
proc procedimiento_184 {E = E+1
stack[E] = 8
call procedimiento_86
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 110
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 118
t22 = t44+4
heap[t22] = 101
t22 = t44+5
heap[t22] = 108
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 55
call procedimiento_25
E = E+1
stack[E] = 0
call procedimiento_83
call procedimiento_65
print('%c',10)
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t10 = stack[E]
stack[E] = 2
call procedimiento_46
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_70
E = E+1
stack[E] = 0
call procedimiento_72
call procedimiento_83
print('%c',10)
}; undefined
proc procedimiento_183 {E = E+1
stack[E] = 8
call procedimiento_81
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 110
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 118
t22 = t44+4
heap[t22] = 101
t22 = t44+5
heap[t22] = 108
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 54
call procedimiento_16
E = E+1
stack[E] = 0
call procedimiento_97
call procedimiento_11
print('%c',10)
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L409
t44 = 0
goto L410
L409:t44 = 1
L410:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L408
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_98
P = P-4
L408:L407:}; undefined
proc procedimiento_182 {E = E+1
stack[E] = 8
call procedimiento_38
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 110
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 118
t22 = t44+4
heap[t22] = 101
t22 = t44+5
heap[t22] = 108
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 53
call procedimiento_78
E = E+1
stack[E] = 0
call procedimiento_61
call procedimiento_81
print('%c',10)
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L405
t44 = 0
goto L406
L405:t44 = 1
L406:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L404
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_24
P = P-4
L404:L403:}; undefined
proc procedimiento_181 {E = E+1
stack[E] = 8
call procedimiento_46
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 110
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 118
t22 = t44+4
heap[t22] = 101
t22 = t44+5
heap[t22] = 108
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 52
call procedimiento_27
E = E+1
stack[E] = 0
call procedimiento_29
call procedimiento_51
print('%c',10)
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L401
t44 = 0
goto L402
L401:t44 = 1
L402:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L400
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_56
P = P-4
L400:L399:}; undefined
proc procedimiento_180 {E = E+1
stack[E] = 8
call procedimiento_38
t44 = stack[E]
heap[t44] = 7
t22 = t44+1
heap[t22] = 110
t22 = t44+2
heap[t22] = 105
t22 = t44+3
heap[t22] = 118
t22 = t44+4
heap[t22] = 101
t22 = t44+5
heap[t22] = 108
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 51
call procedimiento_85
E = E+1
stack[E] = 0
call procedimiento_41
call procedimiento_28
print('%c',10)
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L397
t44 = 0
goto L398
L397:t44 = 1
L398:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L396
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_6
P = P-4
L396:L395:}; undefined
proc procedimiento_177 {t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value!=right_value goto L393
t44 = 0
goto L394
L393:t44 = 1
L394:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L392
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_73
P = P-4
goto L391
L392:P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
t10 = stack[t10]
stack[t22] = t10
t10 = t44
t22 = P
t10 = stack[t10]
stack[t22] = t10
call procedimiento_42
P = P-4
L391:}; undefined
proc procedimiento_191 {E = E+1
stack[E] = 24
call procedimiento_90
t44 = stack[E]
heap[t44] = 23
t22 = t44+1
heap[t22] = 69
t22 = t44+2
heap[t22] = 114
t22 = t44+3
heap[t22] = 114
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 101
t22 = t44+8
heap[t22] = 110
t22 = t44+9
heap[t22] = 32
t22 = t44+10
heap[t22] = 108
t22 = t44+11
heap[t22] = 97
t22 = t44+12
heap[t22] = 32
t22 = t44+13
heap[t22] = 101
t22 = t44+14
heap[t22] = 120
t22 = t44+15
heap[t22] = 112
t22 = t44+16
heap[t22] = 114
t22 = t44+17
heap[t22] = 101
t22 = t44+18
heap[t22] = 115
t22 = t44+19
heap[t22] = 105
t22 = t44+20
heap[t22] = 111
t22 = t44+21
heap[t22] = 110
t22 = t44+22
heap[t22] = 101
t22 = t44+23
heap[t22] = 115
call procedimiento_58
E = E+1
stack[E] = 0
call procedimiento_54
call procedimiento_51
print('%c',10)
E = E+1
stack[E] = 17
call procedimiento_49
t44 = stack[E]
heap[t44] = 16
t22 = t44+1
heap[t22] = 86
t22 = t44+2
heap[t22] = 97
t22 = t44+3
heap[t22] = 108
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 101
t22 = t44+8
heap[t22] = 115
t22 = t44+9
heap[t22] = 112
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 114
t22 = t44+12
heap[t22] = 97
t22 = t44+13
heap[t22] = 100
t22 = t44+14
heap[t22] = 111
t22 = t44+15
heap[t22] = 32
t22 = t44+16
heap[t22] = 66
call procedimiento_4
E = E+1
stack[E] = 0
call procedimiento_36
call procedimiento_83
print('%c',10)
E = E+1
stack[E] = 16
call procedimiento_50
t44 = stack[E]
heap[t44] = 15
t22 = t44+1
heap[t22] = 86
t22 = t44+2
heap[t22] = 97
t22 = t44+3
heap[t22] = 108
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 111
t22 = t44+8
heap[t22] = 98
t22 = t44+9
heap[t22] = 116
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 110
t22 = t44+12
heap[t22] = 105
t22 = t44+13
heap[t22] = 100
t22 = t44+14
heap[t22] = 111
t22 = t44+15
heap[t22] = 32
call procedimiento_68
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
stack[E] = 2
call procedimiento_55
t22 = stack[E]
E = E-1
heap[t22] = 1
t33 = t22+1
heap[t33] = t10
E = E+1
stack[E] = t22
call procedimiento_59
call procedimiento_90
E = E+1
stack[E] = 4
call procedimiento_49
t44 = stack[E]
heap[t44] = 3
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 61
t22 = t44+3
heap[t22] = 40
call procedimiento_38
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_87
E = E+1
stack[E] = 0
call procedimiento_14
call procedimiento_37
print('%c',10)
}; undefined
proc procedimiento_176 {E = E+1
stack[E] = 7555
left_value = stack[E]
E = E-1
right_value = left_value
t44 = left_value*-1
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value*right_value
E = E+1
stack[E] = left_value
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 15
E = E+1
stack[E] = 2
E = E+1
stack[E] = 9
call procedimiento_91
t10 = stack[E]
E = E-1
t22 = t10%1
t10 = t10-t22
E = E+1
stack[E] = t10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value*right_value
E = E+1
stack[E] = left_value
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+2
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+3
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_31
P = P+4
t44 = P-4
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_48
P = P-4
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 30
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t10 = stack[E]
E = E-1
if t10>255 goto L385
if t10<0 goto L385
E = E+1
stack[E] = t10
goto L386
L385:E = E+1
stack[E] = -1
E = E+1
stack[E] = t10
exit (undefined )
L386:t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 66
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L389
t44 = 0
goto L390
L389:t44 = 1
L390:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L388
P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_23
P = P-4
goto L387
L388:P = P+4
t44 = P-4
t10 = t44+3
t22 = P+3
t10 = stack[t10]
stack[t22] = t10
t10 = t44+2
t22 = P+2
t10 = stack[t10]
stack[t22] = t10
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_32
P = P-4
L387:}; undefined
proc procedimiento_194 {E = E+1
stack[E] = 24
call procedimiento_66
t44 = stack[E]
heap[t44] = 23
t22 = t44+1
heap[t22] = 69
t22 = t44+2
heap[t22] = 114
t22 = t44+3
heap[t22] = 114
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 101
t22 = t44+8
heap[t22] = 110
t22 = t44+9
heap[t22] = 32
t22 = t44+10
heap[t22] = 108
t22 = t44+11
heap[t22] = 97
t22 = t44+12
heap[t22] = 32
t22 = t44+13
heap[t22] = 101
t22 = t44+14
heap[t22] = 120
t22 = t44+15
heap[t22] = 112
t22 = t44+16
heap[t22] = 114
t22 = t44+17
heap[t22] = 101
t22 = t44+18
heap[t22] = 115
t22 = t44+19
heap[t22] = 105
t22 = t44+20
heap[t22] = 111
t22 = t44+21
heap[t22] = 110
t22 = t44+22
heap[t22] = 101
t22 = t44+23
heap[t22] = 115
call procedimiento_78
E = E+1
stack[E] = 0
call procedimiento_30
call procedimiento_98
print('%c',10)
E = E+1
stack[E] = 18
call procedimiento_49
t44 = stack[E]
heap[t44] = 17
t22 = t44+1
heap[t22] = 86
t22 = t44+2
heap[t22] = 97
t22 = t44+3
heap[t22] = 108
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 101
t22 = t44+8
heap[t22] = 115
t22 = t44+9
heap[t22] = 112
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 114
t22 = t44+12
heap[t22] = 97
t22 = t44+13
heap[t22] = 100
t22 = t44+14
heap[t22] = 111
t22 = t44+15
heap[t22] = 32
t22 = t44+16
heap[t22] = 49
t22 = t44+17
heap[t22] = 50
call procedimiento_50
E = E+1
stack[E] = 0
call procedimiento_30
call procedimiento_96
print('%c',10)
E = E+1
stack[E] = 16
call procedimiento_40
t44 = stack[E]
heap[t44] = 15
t22 = t44+1
heap[t22] = 86
t22 = t44+2
heap[t22] = 97
t22 = t44+3
heap[t22] = 108
t22 = t44+4
heap[t22] = 111
t22 = t44+5
heap[t22] = 114
t22 = t44+6
heap[t22] = 32
t22 = t44+7
heap[t22] = 111
t22 = t44+8
heap[t22] = 98
t22 = t44+9
heap[t22] = 116
t22 = t44+10
heap[t22] = 101
t22 = t44+11
heap[t22] = 110
t22 = t44+12
heap[t22] = 105
t22 = t44+13
heap[t22] = 100
t22 = t44+14
heap[t22] = 111
t22 = t44+15
heap[t22] = 32
call procedimiento_77
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
t10 = stack[E]
call procedimiento_78
call procedimiento_51
call procedimiento_92
E = E+1
stack[E] = 4
call procedimiento_35
t44 = stack[E]
heap[t44] = 3
t22 = t44+1
heap[t22] = 32
t22 = t44+2
heap[t22] = 61
t22 = t44+3
heap[t22] = 40
call procedimiento_89
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E+1
stack[E] = right_value
call procedimiento_41
E = E+1
stack[E] = 0
call procedimiento_21
call procedimiento_52
print('%c',10)
}; undefined
proc procedimiento_175 {E = E+1
stack[E] = 45
call procedimiento_75
t44 = stack[E]
heap[t44] = 44
t22 = t44+1
heap[t22] = 45
t22 = t44+2
heap[t22] = 45
t22 = t44+3
heap[t22] = 45
t22 = t44+4
heap[t22] = 45
t22 = t44+5
heap[t22] = 45
t22 = t44+6
heap[t22] = 45
t22 = t44+7
heap[t22] = 45
t22 = t44+8
heap[t22] = 45
t22 = t44+9
heap[t22] = 45
t22 = t44+10
heap[t22] = 45
t22 = t44+11
heap[t22] = 45
t22 = t44+12
heap[t22] = 45
t22 = t44+13
heap[t22] = 73
t22 = t44+14
heap[t22] = 70
t22 = t44+15
heap[t22] = 45
t22 = t44+16
heap[t22] = 45
t22 = t44+17
heap[t22] = 45
t22 = t44+18
heap[t22] = 45
t22 = t44+19
heap[t22] = 45
t22 = t44+20
heap[t22] = 45
t22 = t44+21
heap[t22] = 45
t22 = t44+22
heap[t22] = 45
t22 = t44+23
heap[t22] = 45
t22 = t44+24
heap[t22] = 45
t22 = t44+25
heap[t22] = 45
t22 = t44+26
heap[t22] = 45
t22 = t44+27
heap[t22] = 45
t22 = t44+28
heap[t22] = 45
t22 = t44+29
heap[t22] = 45
t22 = t44+30
heap[t22] = 45
t22 = t44+31
heap[t22] = 45
t22 = t44+32
heap[t22] = 45
t22 = t44+33
heap[t22] = 45
t22 = t44+34
heap[t22] = 45
t22 = t44+35
heap[t22] = 45
t22 = t44+36
heap[t22] = 45
t22 = t44+37
heap[t22] = 45
t22 = t44+38
heap[t22] = 45
t22 = t44+39
heap[t22] = 45
t22 = t44+40
heap[t22] = 45
t22 = t44+41
heap[t22] = 45
t22 = t44+42
heap[t22] = 45
t22 = t44+43
heap[t22] = 45
t22 = t44+44
heap[t22] = 45
call procedimiento_85
E = E+1
stack[E] = 0
call procedimiento_56
call procedimiento_87
print('%c',10)
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 12
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value==right_value goto L383
t44 = 0
goto L384
L383:t44 = 1
L384:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L382
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+3
stack[t22] = t10
t10 = t44
t22 = P+2
stack[t22] = t10
call procedimiento_57
P = P-2
goto L381
L382:P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_97
P = P-2
L381:L380:}; undefined
proc procedimiento_198 {t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 1
call procedimiento_37
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_18
P = P-2
t44 = P
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+1
t44 = stack[t44]
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 2
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 1
call procedimiento_91
P = P+2
t44 = P-2
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_15
P = P-2
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
P = P-2
goto L411
}; undefined
proc procedimiento_200 {E = E+1
stack[E] = 1
left_value = stack[E]
E = E-1
right_value = left_value
t44 = left_value*-1
E = E+1
stack[E] = t44
P = P-2
goto L411
}; undefined
proc procedimiento_202 {E = E+1
stack[E] = 1
P = P-2
goto L411
}; undefined
proc procedimiento_197 {t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value>right_value goto L414
t44 = 0
goto L415
L414:t44 = 1
L415:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L413
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_58
P = P-2
goto L412
L413:t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
left_value = stack[E]
E = E-1
right_value = left_value
t44 = left_value*-1
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
if left_value<right_value goto L417
t44 = 0
goto L418
L417:t44 = 1
L418:E = E+1
stack[E] = t44
t10 = stack[E]
E = E-1
if t10==0 goto L416
P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_26
P = P-2
goto L412
L416:P = P+2
t44 = P-2
t10 = t44+1
t22 = P+1
stack[t22] = t10
t10 = t44
t22 = P
stack[t22] = t10
call procedimiento_48
P = P-2
L412:L411:}; undefined
proc procedimiento_205 {call procedimiento_26
t10 = stack[E]
E = E-1
t44 = P
stack[t44] = t10
call procedimiento_2
E = E+1
stack[E] = 15
E = E+1
stack[E] = 1
call procedimiento_83
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_33
P = P-5
t10 = stack[E]
E = E-1
t44 = P+1
stack[t44] = t10
call procedimiento_32
t10 = stack[E]
E = E-1
t44 = P+2
stack[t44] = t10
call procedimiento_42
t10 = stack[E]
E = E-1
t44 = P+3
stack[t44] = t10
E = E+1
stack[E] = 93
t10 = stack[E]
E = E-1
t44 = P+4
stack[t44] = t10
t44 = P+4
E = E+1
stack[E] = 0
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value*right_value
E = E+1
stack[E] = left_value
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value+right_value
E = E+1
stack[E] = left_value
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 15
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value/right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 2
E = E+1
stack[E] = 9
call procedimiento_91
t10 = stack[E]
E = E-1
t22 = t10%1
t10 = t10-t22
E = E+1
stack[E] = t10
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value*right_value
E = E+1
stack[E] = left_value
E = E+1
stack[E] = 294900
right_value = stack[E]
E = E-1
left_value = stack[E]
E = E-1
left_value = left_value-right_value
E = E+1
stack[E] = left_value
t44 = stack[E]
E = E-1
t10 = stack[E]
E = E-1
t22 = stack[E]
E = E-1
if t22==1 goto L421
stack[t10] = t44
goto L420
L421:heap[t10] = t44
L420:E = E+1
stack[E] = 58
call procedimiento_86
t44 = stack[E]
heap[t44] = 57
t22 = t44+1
heap[t22] = 60
t22 = t44+2
heap[t22] = 60
t22 = t44+3
heap[t22] = 60
t22 = t44+4
heap[t22] = 60
t22 = t44+5
heap[t22] = 60
t22 = t44+6
heap[t22] = 60
t22 = t44+7
heap[t22] = 60
t22 = t44+8
heap[t22] = 60
t22 = t44+9
heap[t22] = 60
t22 = t44+10
heap[t22] = 60
t22 = t44+11
heap[t22] = 67
t22 = t44+12
heap[t22] = 65
t22 = t44+13
heap[t22] = 83
t22 = t44+14
heap[t22] = 84
t22 = t44+15
heap[t22] = 69
t22 = t44+16
heap[t22] = 79
t22 = t44+17
heap[t22] = 83
t22 = t44+18
heap[t22] = 32
t22 = t44+19
heap[t22] = 89
t22 = t44+20
heap[t22] = 32
t22 = t44+21
heap[t22] = 86
t22 = t44+22
heap[t22] = 65
t22 = t44+23
heap[t22] = 76
t22 = t44+24
heap[t22] = 79
t22 = t44+25
heap[t22] = 82
t22 = t44+26
heap[t22] = 69
t22 = t44+27
heap[t22] = 83
t22 = t44+28
heap[t22] = 32
t22 = t44+29
heap[t22] = 80
t22 = t44+30
heap[t22] = 79
t22 = t44+31
heap[t22] = 82
t22 = t44+32
heap[t22] = 32
t22 = t44+33
heap[t22] = 68
t22 = t44+34
heap[t22] = 69
t22 = t44+35
heap[t22] = 70
t22 = t44+36
heap[t22] = 69
t22 = t44+37
heap[t22] = 67
t22 = t44+38
heap[t22] = 84
t22 = t44+39
heap[t22] = 79
t22 = t44+40
heap[t22] = 62
t22 = t44+41
heap[t22] = 62
t22 = t44+42
heap[t22] = 62
t22 = t44+43
heap[t22] = 62
t22 = t44+44
heap[t22] = 62
t22 = t44+45
heap[t22] = 62
t22 = t44+46
heap[t22] = 62
t22 = t44+47
heap[t22] = 62
t22 = t44+48
heap[t22] = 62
t22 = t44+49
heap[t22] = 62
t22 = t44+50
heap[t22] = 62
t22 = t44+51
heap[t22] = 62
t22 = t44+52
heap[t22] = 62
t22 = t44+53
heap[t22] = 62
t22 = t44+54
heap[t22] = 62
t22 = t44+55
heap[t22] = 62
t22 = t44+56
heap[t22] = 62
t22 = t44+57
heap[t22] = 62
call procedimiento_78
E = E+1
stack[E] = 0
call procedimiento_5
call procedimiento_56
print('%c',10)
t44 = P+1
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_35
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_87
P = P-5
E = E+1
stack[E] = 50
call procedimiento_69
t44 = stack[E]
heap[t44] = 49
t22 = t44+1
heap[t22] = 60
t22 = t44+2
heap[t22] = 60
t22 = t44+3
heap[t22] = 60
t22 = t44+4
heap[t22] = 60
t22 = t44+5
heap[t22] = 60
t22 = t44+6
heap[t22] = 60
t22 = t44+7
heap[t22] = 60
t22 = t44+8
heap[t22] = 60
t22 = t44+9
heap[t22] = 60
t22 = t44+10
heap[t22] = 60
t22 = t44+11
heap[t22] = 83
t22 = t44+12
heap[t22] = 69
t22 = t44+13
heap[t22] = 78
t22 = t44+14
heap[t22] = 84
t22 = t44+15
heap[t22] = 69
t22 = t44+16
heap[t22] = 78
t22 = t44+17
heap[t22] = 67
t22 = t44+18
heap[t22] = 73
t22 = t44+19
heap[t22] = 65
t22 = t44+20
heap[t22] = 83
t22 = t44+21
heap[t22] = 32
t22 = t44+22
heap[t22] = 68
t22 = t44+23
heap[t22] = 69
t22 = t44+24
heap[t22] = 32
t22 = t44+25
heap[t22] = 67
t22 = t44+26
heap[t22] = 79
t22 = t44+27
heap[t22] = 78
t22 = t44+28
heap[t22] = 84
t22 = t44+29
heap[t22] = 82
t22 = t44+30
heap[t22] = 79
t22 = t44+31
heap[t22] = 76
t22 = t44+32
heap[t22] = 62
t22 = t44+33
heap[t22] = 62
t22 = t44+34
heap[t22] = 62
t22 = t44+35
heap[t22] = 62
t22 = t44+36
heap[t22] = 62
t22 = t44+37
heap[t22] = 62
t22 = t44+38
heap[t22] = 62
t22 = t44+39
heap[t22] = 62
t22 = t44+40
heap[t22] = 62
t22 = t44+41
heap[t22] = 62
t22 = t44+42
heap[t22] = 62
t22 = t44+43
heap[t22] = 62
t22 = t44+44
heap[t22] = 62
t22 = t44+45
heap[t22] = 62
t22 = t44+46
heap[t22] = 62
t22 = t44+47
heap[t22] = 62
t22 = t44+48
heap[t22] = 62
t22 = t44+49
heap[t22] = 62
call procedimiento_73
E = E+1
stack[E] = 0
call procedimiento_60
call procedimiento_73
print('%c',10)
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
t44 = P+4
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 1
call procedimiento_49
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
t10 = stack[E]
E = E-1
t22 = P+1
stack[t22] = t10
call procedimiento_65
P = P-5
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_29
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_7
P = P-5
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_58
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_41
P = P-5
t44 = P+3
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_60
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_98
P = P-5
E = E+1
stack[E] = 37
call procedimiento_44
t44 = stack[E]
heap[t44] = 36
t22 = t44+1
heap[t22] = 60
t22 = t44+2
heap[t22] = 60
t22 = t44+3
heap[t22] = 60
t22 = t44+4
heap[t22] = 60
t22 = t44+5
heap[t22] = 60
t22 = t44+6
heap[t22] = 60
t22 = t44+7
heap[t22] = 60
t22 = t44+8
heap[t22] = 60
t22 = t44+9
heap[t22] = 60
t22 = t44+10
heap[t22] = 60
t22 = t44+11
heap[t22] = 65
t22 = t44+12
heap[t22] = 82
t22 = t44+13
heap[t22] = 82
t22 = t44+14
heap[t22] = 69
t22 = t44+15
heap[t22] = 71
t22 = t44+16
heap[t22] = 76
t22 = t44+17
heap[t22] = 79
t22 = t44+18
heap[t22] = 83
t22 = t44+19
heap[t22] = 62
t22 = t44+20
heap[t22] = 62
t22 = t44+21
heap[t22] = 62
t22 = t44+22
heap[t22] = 62
t22 = t44+23
heap[t22] = 62
t22 = t44+24
heap[t22] = 62
t22 = t44+25
heap[t22] = 62
t22 = t44+26
heap[t22] = 62
t22 = t44+27
heap[t22] = 62
t22 = t44+28
heap[t22] = 62
t22 = t44+29
heap[t22] = 62
t22 = t44+30
heap[t22] = 62
t22 = t44+31
heap[t22] = 62
t22 = t44+32
heap[t22] = 62
t22 = t44+33
heap[t22] = 62
t22 = t44+34
heap[t22] = 62
t22 = t44+35
heap[t22] = 62
t22 = t44+36
heap[t22] = 62
call procedimiento_16
E = E+1
stack[E] = 0
call procedimiento_12
call procedimiento_23
print('%c',10)
t44 = P
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_66
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_56
P = P-5
E = E+1
stack[E] = 57
call procedimiento_87
t44 = stack[E]
heap[t44] = 56
t22 = t44+1
heap[t22] = 60
t22 = t44+2
heap[t22] = 60
t22 = t44+3
heap[t22] = 60
t22 = t44+4
heap[t22] = 60
t22 = t44+5
heap[t22] = 60
t22 = t44+6
heap[t22] = 60
t22 = t44+7
heap[t22] = 60
t22 = t44+8
heap[t22] = 60
t22 = t44+9
heap[t22] = 60
t22 = t44+10
heap[t22] = 60
t22 = t44+11
heap[t22] = 79
t22 = t44+12
heap[t22] = 66
t22 = t44+13
heap[t22] = 74
t22 = t44+14
heap[t22] = 69
t22 = t44+15
heap[t22] = 84
t22 = t44+16
heap[t22] = 79
t22 = t44+17
heap[t22] = 83
t22 = t44+18
heap[t22] = 32
t22 = t44+19
heap[t22] = 89
t22 = t44+20
heap[t22] = 32
t22 = t44+21
heap[t22] = 65
t22 = t44+22
heap[t22] = 82
t22 = t44+23
heap[t22] = 82
t22 = t44+24
heap[t22] = 69
t22 = t44+25
heap[t22] = 71
t22 = t44+26
heap[t22] = 76
t22 = t44+27
heap[t22] = 79
t22 = t44+28
heap[t22] = 32
t22 = t44+29
heap[t22] = 68
t22 = t44+30
heap[t22] = 69
t22 = t44+31
heap[t22] = 32
t22 = t44+32
heap[t22] = 79
t22 = t44+33
heap[t22] = 66
t22 = t44+34
heap[t22] = 74
t22 = t44+35
heap[t22] = 69
t22 = t44+36
heap[t22] = 84
t22 = t44+37
heap[t22] = 79
t22 = t44+38
heap[t22] = 83
t22 = t44+39
heap[t22] = 62
t22 = t44+40
heap[t22] = 62
t22 = t44+41
heap[t22] = 62
t22 = t44+42
heap[t22] = 62
t22 = t44+43
heap[t22] = 62
t22 = t44+44
heap[t22] = 62
t22 = t44+45
heap[t22] = 62
t22 = t44+46
heap[t22] = 62
t22 = t44+47
heap[t22] = 62
t22 = t44+48
heap[t22] = 62
t22 = t44+49
heap[t22] = 62
t22 = t44+50
heap[t22] = 62
t22 = t44+51
heap[t22] = 62
t22 = t44+52
heap[t22] = 62
t22 = t44+53
heap[t22] = 62
t22 = t44+54
heap[t22] = 62
t22 = t44+55
heap[t22] = 62
t22 = t44+56
heap[t22] = 62
call procedimiento_22
E = E+1
stack[E] = 0
call procedimiento_73
call procedimiento_68
print('%c',10)
t44 = P+2
t44 = stack[t44]
E = E+1
stack[E] = t44
E = E+1
stack[E] = 0
call procedimiento_51
P = P+5
t44 = P-5
t10 = stack[E]
E = E-1
t22 = P
stack[t22] = t10
call procedimiento_0
P = P-5
L419:}; undefined 
